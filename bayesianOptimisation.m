%% Bayesian Optimisation for Hyperparameter Tuning
% Ethan L. Edmunds, Nov 2024
function [bayesOptModel, bayesOptModelInfo] = bayesianOptimisation(trainData, valData, valImages, valLabels, classNames, aux_params)
    bayesOpt_options = trainingOptions('adam', ...
    "MiniBatchSize", 128, ...
    'InitialLearnRate',0.002, ...
    'MaxEpochs', 10, ...
    'Shuffle','every-epoch', ...
    'ValidationData',valData, ...
    'ValidationFrequency', 5, ...
    'ValidationPatience', 100, ...
    'Verbose',true, ...
    'LearnRateDropPeriod', 1, ...
    'LearnRateDropFactor', 0.1, ...
    'Metrics', ["accuracy" "recall"], ...
    'OutputNetwork', 'best-validation');

    % identify the variables to be optimised through bayesian optimization
    optVars = [
        optimizableVariable('Layers', [2 12], "Type", "integer")
        optimizableVariable('Filters', [10 60], "Type", "integer")
        optimizableVariable('InitialLearnRate', [0.001 0.05], "Type", "real")
        optimizableVariable('LearnRateDropFactor', [0.1 0.5], "Type", "real")
        optimizableVariable('LearnRateDropPeriod', [1 5], "Type", "integer")
    ];

    objFcn = makeObjFun(trainData, valImages, valLabels, classNames, bayesOpt_options, aux_params);

    BayesObject = bayesopt(objFcn, optVars, ...
    "MaxTime", 24*60*60, ...
    "IsObjectiveDeterministic", false, ...
    "UseParallel", true, ...
    "MaxObjectiveEvaluations", 50);

end